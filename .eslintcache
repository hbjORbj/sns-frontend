[{"/Users/bennyjoo/Documents/react/sns-frontend/src/App.js":"1","/Users/bennyjoo/Documents/react/sns-frontend/src/index.js":"2","/Users/bennyjoo/Documents/react/sns-frontend/src/MainRouter.js":"3","/Users/bennyjoo/Documents/react/sns-frontend/src/user/Signup.js":"4","/Users/bennyjoo/Documents/react/sns-frontend/src/user/apiUser.js":"5","/Users/bennyjoo/Documents/react/sns-frontend/src/user/Login.js":"6","/Users/bennyjoo/Documents/react/sns-frontend/src/global/Home.js":"7","/Users/bennyjoo/Documents/react/sns-frontend/src/global/Navigation.js":"8","/Users/bennyjoo/Documents/react/sns-frontend/src/auth/index.js":"9","/Users/bennyjoo/Documents/react/sns-frontend/src/user/Profile.js":"10","/Users/bennyjoo/Documents/react/sns-frontend/src/user/Users.js":"11","/Users/bennyjoo/Documents/react/sns-frontend/src/user/DeleteUser.js":"12","/Users/bennyjoo/Documents/react/sns-frontend/src/user/EditProfile.js":"13","/Users/bennyjoo/Documents/react/sns-frontend/src/auth/PrivateRoute.js":"14","/Users/bennyjoo/Documents/react/sns-frontend/src/user/FollowButton.js":"15","/Users/bennyjoo/Documents/react/sns-frontend/src/post/NewPost.js":"16","/Users/bennyjoo/Documents/react/sns-frontend/src/user/ProfileTabs.js":"17","/Users/bennyjoo/Documents/react/sns-frontend/src/user/FindPeople.js":"18","/Users/bennyjoo/Documents/react/sns-frontend/src/post/apiPost.js":"19","/Users/bennyjoo/Documents/react/sns-frontend/src/post/SinglePost.js":"20","/Users/bennyjoo/Documents/react/sns-frontend/src/post/EditPost.js":"21","/Users/bennyjoo/Documents/react/sns-frontend/src/post/LikeButton.js":"22","/Users/bennyjoo/Documents/react/sns-frontend/src/post/Comment.js":"23","/Users/bennyjoo/Documents/react/sns-frontend/src/user/ForgotPassword.js":"24","/Users/bennyjoo/Documents/react/sns-frontend/src/user/ResetPassword.js":"25"},{"size":263,"mtime":1608635436952,"results":"26","hashOfConfig":"27"},{"size":198,"mtime":1608638044919,"results":"28","hashOfConfig":"27"},{"size":1717,"mtime":1609244605715,"results":"29","hashOfConfig":"27"},{"size":2601,"mtime":1609226780093,"results":"30","hashOfConfig":"27"},{"size":4511,"mtime":1609227226951,"results":"31","hashOfConfig":"27"},{"size":2239,"mtime":1609245845950,"results":"32","hashOfConfig":"27"},{"size":327,"mtime":1608704900462,"results":"33","hashOfConfig":"27"},{"size":3348,"mtime":1609051321757,"results":"34","hashOfConfig":"27"},{"size":1466,"mtime":1609245788147,"results":"35","hashOfConfig":"27"},{"size":5104,"mtime":1609051026446,"results":"36","hashOfConfig":"27"},{"size":1957,"mtime":1608988233305,"results":"37","hashOfConfig":"27"},{"size":1180,"mtime":1608817097013,"results":"38","hashOfConfig":"27"},{"size":4681,"mtime":1609221536711,"results":"39","hashOfConfig":"27"},{"size":463,"mtime":1608867547833,"results":"40","hashOfConfig":"27"},{"size":767,"mtime":1609143316771,"results":"41","hashOfConfig":"27"},{"size":3453,"mtime":1609060435770,"results":"42","hashOfConfig":"27"},{"size":2741,"mtime":1609051161643,"results":"43","hashOfConfig":"27"},{"size":2142,"mtime":1608988809437,"results":"44","hashOfConfig":"27"},{"size":3314,"mtime":1609217204742,"results":"45","hashOfConfig":"27"},{"size":5050,"mtime":1609218814960,"results":"46","hashOfConfig":"27"},{"size":3751,"mtime":1609060385526,"results":"47","hashOfConfig":"27"},{"size":919,"mtime":1609174207096,"results":"48","hashOfConfig":"27"},{"size":4435,"mtime":1609314127655,"results":"49","hashOfConfig":"27"},{"size":1828,"mtime":1609245575028,"results":"50","hashOfConfig":"27"},{"size":2260,"mtime":1609245724074,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"8474if",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"/Users/bennyjoo/Documents/react/sns-frontend/src/App.js",["115","116"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MainRouter } from \"./MainRouter\";\n\nconst App = () => (\n  <BrowserRouter>\n    <MainRouter />\n  </BrowserRouter>\n);\n\nexport default App;\n",["117","118"],"/Users/bennyjoo/Documents/react/sns-frontend/src/index.js",[],["119","120"],"/Users/bennyjoo/Documents/react/sns-frontend/src/MainRouter.js",["121"],"import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./global/Home\";\nimport Navigation from \"./global/Navigation\";\nimport NewPost from \"./post/NewPost\";\nimport EditProfile from \"./user/EditProfile\";\nimport Login from \"./user/Login\";\nimport Profile from \"./user/Profile\";\nimport Signup from \"./user/Signup\";\nimport Users from \"./user/Users\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport FindPeople from \"./user/FindPeople\";\nimport SinglePost from \"./post/SinglePost\";\nimport EditPost from \"./post/EditPost\";\nimport ForgotPassword from \"./user/ForgotPassword\";\nimport ResetPassword from \"./user/ResetPassword\";\n\nexport const MainRouter = () => (\n  <div>\n    <Navigation />\n    <Switch>\n      {/* Global */}\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route exact path=\"/signup\" component={Signup}></Route>\n      <Route exact path=\"/login\" component={Login}></Route>\n      <PrivateRoute exact path=\"/findpeople\" component={FindPeople} />\n      <Route exact path=\"/forgot-password\" component={ForgotPassword}></Route>\n      <Route\n        exact\n        path=\"/reset-password/:resetPasswordToken\"\n        component={ResetPassword}\n      ></Route>\n\n      {/* User */}\n      <Route exact path=\"/users\" component={Users}></Route>\n      <PrivateRoute exact path=\"/user/:userId\" component={Profile} />\n      <PrivateRoute exact path=\"/user/edit/:userId\" component={EditProfile} />\n\n      {/* Post */}\n      <Route exact path=\"/post/:postId\" component={SinglePost} />\n      <PrivateRoute exact path=\"/post/new/:userId\" component={NewPost} />\n      <PrivateRoute exact path=\"/post/edit/:postId\" component={EditPost} />\n    </Switch>\n  </div>\n);\n","/Users/bennyjoo/Documents/react/sns-frontend/src/user/Signup.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/user/apiUser.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/user/Login.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/global/Home.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/global/Navigation.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/auth/index.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/user/Profile.js",["122"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getJwt, isUserLoggedIn } from \"../auth\";\nimport { readUser } from \"./apiUser\";\nimport DeleteUser from \"./DeleteUser\";\nimport DefaultAvatar from \"../images/avatar.jpg\";\nimport FollowButton from \"./FollowButton\";\nimport ProfileTabs from \"./ProfileTabs\";\nimport { getPostsByUser } from \"../post/apiPost\";\n\nclass Profile extends Component {\n  state = {\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    created: \"\",\n    following: [],\n    followers: [],\n    posts: [],\n    amIFollowing: false,\n    about: \"\",\n    loading: true,\n  };\n\n  checkFollow = () => {\n    const { followers } = this.state;\n    let match = followers.find(\n      (follower) => follower._id === getJwt().user._id\n    );\n    return match !== undefined;\n  };\n\n  handleFollowButton = (api) => {\n    const jwt = getJwt();\n    api(jwt.user._id, this.state._id, jwt.token).then((data) => {\n      if (data.error) this.setState({ error: data.error });\n      else {\n        this.setState({\n          amIFollowing: !this.state.amIFollowing,\n          followers: data.followers,\n          following: data.following,\n        });\n      }\n    });\n  };\n\n  loadPosts = (userId) => {\n    const token = getJwt().token;\n    getPostsByUser(userId, token).then((data) => {\n      if (data.error) this.setState({ error: data.error });\n      else {\n        this.setState({ posts: data });\n      }\n    });\n  };\n\n  init(userId) {\n    const token = isUserLoggedIn() ? getJwt().token : null;\n    readUser(userId, token).then((data) => {\n      if (data.error) this.setState({ error: data.error });\n      else {\n        this.setState({\n          _id: data._id,\n          name: data.name,\n          email: data.email,\n          created: data.created,\n          following: data.following,\n          followers: data.followers,\n          about: data.about,\n          loading: false,\n        });\n        this.setState({ amIFollowing: this.checkFollow() });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.userId;\n    this.loadPosts(userId);\n    this.init(userId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.setState({ loading: true });\n      const userId = this.props.match.params.userId;\n      this.init(userId);\n    }\n  }\n\n  render() {\n    const {\n      _id,\n      name,\n      email,\n      created,\n      about,\n      loading,\n      posts,\n      amIFollowing,\n      following,\n      followers,\n    } = this.state;\n    const photoUrl = `${process.env.REACT_APP_API_URL}/user/photo/${_id}`;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">Profile</h2>\n        <hr />\n        <br />\n\n        {loading ? (\n          <div className=\"jumbotron\">\n            <h2 className=\"text-center\">Loading...</h2>\n          </div>\n        ) : (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <img\n                  className=\"img-thumbnail\"\n                  alt={`${name}'s Profile Image`}\n                  style={{ width: \"auto\", height: \"250px\" }}\n                  src={photoUrl}\n                  onError={(i) => (i.target.src = `${DefaultAvatar}`)}\n                />\n              </div>\n              <div className=\"col-md-8\">\n                <div className=\"lead mt-3\">\n                  <p>Hello, {name}</p>\n                  <p>Email: {email}</p>\n                  <p>{`Joined on ${new Date(created).toDateString()}`}</p>\n                </div>\n\n                {isUserLoggedIn() &&\n                getJwt().user &&\n                getJwt().user._id === _id ? (\n                  <div className=\"mt-5 mb-5\">\n                    <Link\n                      className=\"btn btn-raised btn-info mr-5\"\n                      to={`/post/new/${_id}`}\n                      style={{ width: \"170px\" }}\n                    >\n                      Create Post\n                    </Link>\n                    <Link\n                      className=\"btn btn-raised btn-success mr-5\"\n                      to={`/user/edit/${_id}`}\n                      style={{ width: \"170px\" }}\n                    >\n                      Edit Profile\n                    </Link>\n                    <DeleteUser userId={_id} />\n                  </div>\n                ) : (\n                  <div className=\"mt-5 mb-5\">\n                    <FollowButton\n                      amIFollowing={amIFollowing}\n                      onButtonClick={this.handleFollowButton}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <hr />\n                <p className=\"lead\">{about}</p>\n                <hr />\n              </div>\n            </div>\n            <ProfileTabs\n              followers={followers}\n              following={following}\n              posts={posts}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/user/Users.js",["123"],"import React, { Component } from \"react\";\nimport { listUsers } from \"./apiUser\";\nimport { Link } from \"react-router-dom\";\nimport DefaultAvatar from \"../images/avatar.jpg\";\n\nclass Users extends Component {\n  state = {\n    users: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    listUsers().then((data) => {\n      if (data.error) {\n      } else {\n        this.setState({ users: data, loading: false });\n      }\n    });\n  }\n\n  render() {\n    const { users, loading } = this.state;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">Users</h2>\n        {loading ? (\n          <div className=\"jumbotron\">\n            <h2 className=\"text-center\">Loading...</h2>\n          </div>\n        ) : (\n          <div className=\"row\">\n            {users.map((user, i) => (\n              <div\n                key={i}\n                className=\"card col-md-2.75 m-3\"\n                style={{ width: \"200px\" }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt={`${user.name}'s Profile Image`}\n                  style={{ width: \"auto\", height: \"250px\" }}\n                  src={`${process.env.REACT_APP_API_URL}/user/photo/${user._id}`}\n                  onError={(i) => (i.target.src = `${DefaultAvatar}`)}\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{user.name}</h5>\n\n                  <p className=\"card-text\">{user.email}</p>\n                  <p className=\"card-text\">{`Joined on ${new Date(\n                    user.created\n                  ).toDateString()}`}</p>\n                  <Link\n                    to={`/user/${user._id}`}\n                    className=\"btn btn-raised btn-primary btn-sm\"\n                  >\n                    View Profile\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Users;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/user/DeleteUser.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/user/EditProfile.js",["124","125"],"import React, { Component, isValidElement } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getJwt, isUserLoggedIn, updateJwt } from \"../auth\";\nimport { readUser, updateUser } from \"./apiUser\";\n\nclass EditProfile extends Component {\n  state = {\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    about: \"\",\n    fileSize: 0,\n    redirect: false,\n    loading: true,\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.userData = new FormData();\n    const token = isUserLoggedIn() ? getJwt().token : null;\n    const userId = this.props.match.params.userId;\n\n    readUser(userId, token).then((data) => {\n      if (data.error) this.setState({ redirect: true });\n      else {\n        this.setState({\n          _id: data._id,\n          name: data.name,\n          email: data.email,\n          about: data.about,\n          error: \"\",\n          loading: false,\n        });\n      }\n    });\n  }\n\n  handleChange = (name) => (event) => {\n    const value =\n      name === \"photo\" && event.target.files.length > 0\n        ? event.target.files[0]\n        : event.target.value;\n    const fileSize =\n      name === \"photo\" && event.target.files.length > 0\n        ? event.target.files[0].size\n        : 0;\n    this.userData.set(name, value);\n    this.setState({\n      error: \"\",\n      [name]: value,\n      fileSize,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const token = isUserLoggedIn() ? getJwt().token : null;\n    const userId = this.props.match.params.userId;\n    updateUser(userId, token, this.userData).then((data) => {\n      if (data.error) {\n        this.setState({ error: data.error });\n      } else {\n        updateJwt(data, () =>\n          this.setState({\n            redirect: true,\n          })\n        );\n      }\n    });\n  };\n\n  confirmUpdate = (event) => {\n    event.preventDefault();\n    if (this.isValid()) {\n      let answer = window.confirm(\n        \"Are you sure you want to update your profile?\"\n      );\n      if (answer) {\n        this.handleSubmit(event);\n      }\n    }\n  };\n\n  isValid = () => {\n    const { name, email, fileSize } = this.state;\n    if (fileSize > 100000) {\n      this.setState({\n        error: \"File size should be less than 100 KB.\",\n      });\n      return false;\n    }\n    if (name.length === 0) {\n      this.setState({ error: \"Type your name.\" });\n      return false;\n    }\n    if (!/.+\\@.+\\..+/.test(email)) {\n      this.setState({ error: \"Invalid email address.\" });\n      return false;\n    }\n    return true;\n  };\n\n  updateForm = (name, email, about) => (\n    <form>\n      {/* Profile Image */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Profile Image</label>\n        <input\n          onChange={this.handleChange(\"photo\")}\n          type=\"file\"\n          accept=\"image/*\"\n          className=\"form-control\"\n        ></input>\n      </div>\n\n      {/* Name */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Name</label>\n        <input\n          onChange={this.handleChange(\"name\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={name}\n        ></input>\n      </div>\n\n      {/* Email */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Email</label>\n        <input\n          onChange={this.handleChange(\"email\")}\n          type=\"text\"\n          value={email}\n          className=\"form-control\"\n        ></input>\n      </div>\n\n      {/* About */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">About</label>\n        <input\n          onChange={this.handleChange(\"about\")}\n          type=\"text\"\n          value={about}\n          className=\"form-control\"\n        ></input>\n      </div>\n\n      <button\n        className=\"btn btn-raised btn-primary mt-3 mb-3\"\n        onClick={this.confirmUpdate}\n      >\n        Update Profile\n      </button>\n    </form>\n  );\n\n  render() {\n    const { _id, name, email, redirect, error, about, loading } = this.state;\n    if (redirect) {\n      return <Redirect to={`/user/${_id}`} />;\n    }\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\n        <hr />\n        <br />\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n        {loading ? (\n          <div className=\"jumbotron\">\n            <h2 className=\"text-center\">Loading...</h2>\n          </div>\n        ) : (\n          <div>\n            {isUserLoggedIn() &&\n              getJwt().user._id === _id &&\n              this.updateForm(name, email, about)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditProfile;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/auth/PrivateRoute.js",["126"],"import React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { isUserLoggedIn } from \".\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isUserLoggedIn() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: \"/login\", state: { from: props.location } }}\n        />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/user/FollowButton.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/post/NewPost.js",["127"],"import React, { Component, isValidElement } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getJwt } from \"../auth\";\nimport { createPost } from \"./apiPost\";\n\nclass NewPost extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    photo: \"\",\n    error: \"\",\n    fileSize: 0,\n    loading: true,\n    redirect: false,\n    postId: \"\",\n  };\n\n  componentDidMount() {\n    this.postData = new FormData();\n    this.setState({ loading: false });\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({ error: \"\" });\n    const value =\n      name === \"photo\" && event.target.files.length > 0\n        ? event.target.files[0]\n        : event.target.value;\n    const fileSize =\n      name === \"photo\" && event.target.files.length > 0\n        ? event.target.files[0].size\n        : 0;\n    this.postData.set(name, value);\n    this.setState({ [name]: value, fileSize });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isValid()) {\n      const jwt = getJwt();\n      createPost(jwt.user._id, jwt.token, this.postData).then((data) => {\n        if (data.error) this.setState({ error: data.error });\n        else {\n          this.setState({\n            postId: data._id,\n            redirect: true,\n          });\n        }\n      });\n    }\n  };\n\n  isValid = () => {\n    const { title, body, fileSize } = this.state;\n    if (fileSize > 1000000) {\n      this.setState({ error: \"File size should be less than 1 MB.\" });\n      return false;\n    }\n    if (title.length === 0 || body.length === 0) {\n      this.setState({ error: \"All fields are required.\" });\n      return false;\n    }\n    return true;\n  };\n\n  newPostForm = (title, body) => (\n    <form>\n      {/* Image */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Post Photo</label>\n        <input\n          onChange={this.handleChange(\"photo\")}\n          type=\"file\"\n          accept=\"image/*\"\n          className=\"form-control\"\n        />\n      </div>\n      {/* Title */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Title</label>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          onChange={this.handleChange(\"title\")}\n          value={title}\n        />\n      </div>\n\n      {/* Body */}\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Body</label>\n        <textarea\n          className=\"form-control\"\n          value={body}\n          type=\"text\"\n          style={{ height: \"150px\" }}\n          onChange={this.handleChange(\"body\")}\n        />\n      </div>\n\n      {/* Submit Button */}\n      <button\n        onClick={this.handleSubmit}\n        className=\"btn btn-raised btn-primary mt-3 mb-3\"\n      >\n        Create Post\n      </button>\n    </form>\n  );\n\n  render() {\n    const { title, body, postId, error, loading, redirect } = this.state;\n    if (redirect) {\n      return <Redirect to={`/post/${postId}`} />;\n    }\n\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">Create a New Post</h2>\n        <hr />\n        <br />\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n        {loading ? (\n          <div className=\"jumbotron text-center\">\n            <h2>Loading...</h2>\n          </div>\n        ) : (\n          <div>{this.newPostForm(title, body)}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NewPost;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/user/ProfileTabs.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/user/FindPeople.js",["128"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getJwt } from \"../auth\";\nimport { findPeople } from \"./apiUser\";\nimport DefaultAvatar from \"../images/avatar.jpg\";\n\nclass FindPeople extends Component {\n  state = {\n    users: [],\n    loading: true,\n    error: \"\",\n  };\n\n  componentDidMount() {\n    const jwt = getJwt();\n    findPeople(jwt.user._id, jwt.token).then((data) => {\n      if (data.error) {\n        this.setState({ error: data.error });\n      } else {\n        this.setState({\n          users: data,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    const { users, loading } = this.state;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">Users</h2>\n        {loading ? (\n          <div className=\"jumbotron\">\n            <h2 className=\"text-center\">Loading...</h2>\n          </div>\n        ) : (\n          <div className=\"row\">\n            {users.map((user, i) => (\n              <div\n                key={i}\n                className=\"card col-md-2.75 m-3\"\n                style={{ width: \"200px\" }}\n              >\n                <img\n                  className=\"card-img-top\"\n                  alt={`${user.name}'s Profile Image`}\n                  style={{ width: \"auto\", height: \"250px\" }}\n                  src={`${process.env.REACT_APP_API_URL}/user/photo/${user._id}`}\n                  onError={(i) => (i.target.src = `${DefaultAvatar}`)}\n                />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{user.name}</h5>\n\n                  <p className=\"card-text\">{user.email}</p>\n                  <p className=\"card-text\">{`Joined on ${new Date(\n                    user.created\n                  ).toDateString()}`}</p>\n                  <Link\n                    to={`/user/${user._id}`}\n                    className=\"btn btn-raised btn-primary btn-sm\"\n                  >\n                    View Profile\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FindPeople;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/post/apiPost.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/post/SinglePost.js",["129","130"],"import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getJwt } from \"../auth\";\nimport { deletePost, getPost } from \"./apiPost\";\nimport Comment from \"./Comment\";\nimport LikeButton from \"./LikeButton\";\n\nclass SinglePost extends Component {\n  state = {\n    post: \"\",\n    error: \"\",\n    likes: \"\",\n    comments: [],\n    amILiking: false,\n    loading: true,\n    redirectToHome: false,\n    redirectToLogin: false,\n    redirectToProfile: false,\n  };\n\n  updateComments = (comments) => {\n    this.setState({ comments });\n  };\n\n  checkLike = () => {\n    const { likes } = this.state;\n    const userId = getJwt() ? getJwt().user._id : \"\";\n    let match = likes.find((user) => user._id === userId);\n    return match !== undefined;\n  };\n\n  handleLikeButton = (api) => {\n    if (!getJwt()) this.setState({ redirectToLogin: true });\n    else {\n      const { token, user } = getJwt();\n      const postId = this.props.match.params.postId;\n      api(user._id, postId, token).then((data) => {\n        if (data.error) this.setState({ error: data.error });\n        else {\n          this.setState({\n            amILiking: !this.state.amILiking,\n            likes: data.likes,\n          });\n        }\n      });\n    }\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    getPost(postId).then((data) => {\n      if (data.error) this.setState({ error: data.error });\n      else {\n        this.setState({\n          post: data,\n          likes: data.likes,\n          comments: data.comments,\n          loading: false,\n        });\n        this.setState({\n          amILiking: this.checkLike(),\n        });\n      }\n    });\n  }\n\n  deletePost = () => {\n    const token = getJwt().token;\n    const postId = this.props.match.params.postId;\n    deletePost(postId, token).then((data) => {\n      if (data.error) console.log(data.error);\n      else {\n        this.setState({ redirectToProfile: true });\n      }\n    });\n  };\n\n  confirmDeletion = () => {\n    let answer = window.confirm(\"Are you sure you want to delete your post?\");\n    if (answer) {\n      this.deletePost();\n    }\n  };\n\n  render() {\n    const {\n      post: { _id, title, body, created, postedBy, photo },\n      loading,\n      amILiking,\n      likes,\n      comments,\n      redirectToHome,\n      redirectToLogin,\n      redirectToProfile,\n    } = this.state;\n\n    if (redirectToHome) {\n      return <Redirect to=\"/\" />;\n    }\n    if (redirectToLogin) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (redirectToProfile) {\n      return <Redirect to={`/user/${getJwt().user._id}`} />;\n    }\n\n    const posterId = postedBy ? postedBy._id : \"\";\n    const posterName = postedBy ? postedBy.name : \"\";\n    const photoUrl = `${process.env.REACT_APP_API_URL}/post/photo/${_id}`;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">{title}</h2>\n        <hr />\n        <br />\n\n        {/* Post Contents */}\n        {loading ? (\n          <div className=\"jumbotron text-center\">\n            <h2>Loading...</h2>\n          </div>\n        ) : (\n          <div className=\"card-body\">\n            <div style={{ display: photo ? \"\" : \"none\" }}>\n              <img\n                src={photoUrl}\n                alt={`${title}'s image`}\n                className=\"img-thumbnail mb-5\"\n                style={{ width: \"50%\", height: \"300px\" }}\n              />\n            </div>\n\n            <p className=\"card-text\">{body}</p>\n            <br />\n            <p className=\"font-italic mark\">\n              Posted by <Link to={`/user/${posterId}`}>{posterName} </Link>\n              on {new Date(created).toDateString()}\n            </p>\n\n            {/* All Buttons */}\n            <div>\n              <div>\n                <LikeButton\n                  likes={likes}\n                  amILiking={amILiking}\n                  onButtonClick={this.handleLikeButton}\n                />\n              </div>\n\n              <Link\n                to=\"/\"\n                className=\"btn btn-raised btn-primary btn-sm mr-3\"\n                style={{ width: \"125px\" }}\n              >\n                Back to posts\n              </Link>\n              {getJwt() && getJwt().user._id == posterId && (\n                <>\n                  <Link\n                    to={`/post/edit/${_id}`}\n                    className=\"btn btn-raised btn-success btn-sm mr-3\"\n                    style={{ width: \"125px\" }}\n                  >\n                    Edit Post\n                  </Link>\n                  <button\n                    className=\"btn btn-raised btn-danger btn-sm\"\n                    style={{ width: \"125px\" }}\n                    onClick={this.confirmDeletion}\n                  >\n                    Delete Post\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Comments */}\n        <Comment\n          comments={comments}\n          postId={_id}\n          updateComments={this.updateComments}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SinglePost;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/post/EditPost.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/post/LikeButton.js",[],"/Users/bennyjoo/Documents/react/sns-frontend/src/post/Comment.js",["131","132"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getJwt } from \"../auth\";\nimport { deleteComment, postComment } from \"./apiPost\";\n\nclass Comment extends Component {\n  state = {\n    text: \"\",\n    error: \"\",\n  };\n\n  isValid = () => {\n    const { text } = this.state;\n    if (text.length == 0) {\n      this.setState({ error: \"Comment cannot be empty.\" });\n      return false;\n    } else if (text.length > 150) {\n      this.setState({ error: \"Comment should be less than 150 characters.\" });\n      return false;\n    }\n    return true;\n  };\n\n  handleChange = (event) => {\n    this.setState({ error: \"\", text: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (!getJwt()) {\n      this.setState({ error: \"Please sign in to leave a comment.\" });\n      return false;\n    }\n\n    if (this.isValid()) {\n      const { token, user } = getJwt();\n      postComment(user._id, this.props.postId, token, {\n        text: this.state.text,\n      }).then((data) => {\n        console.log(data);\n        if (data.error) this.setState({ error: data.error });\n        else {\n          this.setState({\n            text: \"\",\n          });\n          this.props.updateComments(data.comments);\n        }\n      });\n    }\n  };\n\n  confirmDeletion = (comment) => {\n    let answer = window.confirm(\n      \"Are you sure you want to delete your comment?\"\n    );\n    if (answer) {\n      this.handleDeletion(comment);\n    }\n  };\n\n  handleDeletion = (comment) => {\n    const { token, user } = getJwt();\n    deleteComment(user._id, this.props.postId, token, comment).then((data) => {\n      if (data.error) console.log(data.error);\n      else {\n        this.props.updateComments(data.comments);\n      }\n    });\n  };\n\n  render() {\n    const { text, error } = this.state;\n    const { comments } = this.props;\n    return (\n      <div className=\"mt-5 mb-5\">\n        {/* Type Comment */}\n        <h2 className=\"text-primary\">Leave a comment</h2>\n        <form onSubmit={this.handleSubmit} className=\"mt-3 mb-3\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={this.handleChange}\n              value={text}\n              className=\"form-control\"\n              placeholder=\"Leave a comment...\"\n            />\n            <button type=\"submit\" className=\"btn btn-raised btn-primary mt-3\">\n              Post\n            </button>\n          </div>\n        </form>\n\n        {/* Error */}\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n\n        {/* All Comments */}\n        <div>\n          <h3 className=\"text-primary\">\n            {comments ? comments.length : 0} Comments\n          </h3>\n          <hr />\n          {comments.reverse().map((comment, i) => (\n            <div key={i}>\n              <div className=\"row\">\n                <Link>\n                  <img\n                    style={{\n                      borderRadius: \"50%\",\n                      border: \"1px solid black\",\n                      height: \"30px\",\n                      width: \"30px\",\n                    }}\n                    className=\"ml-3 mr-2\"\n                    alt={comment.postedBy.name}\n                    src={`${process.env.REACT_APP_API_URL}/user/photo/${comment.postedBy._id}`}\n                  />\n                </Link>\n                <p className=\"lead\">{comment.text}</p>\n              </div>\n              <div>\n                <p className=\"font-italic mark\">\n                  Posted by{\" \"}\n                  <Link to={`/user/${comment.postedBy._id}`}>\n                    {comment.postedBy.name}{\" \"}\n                  </Link>\n                  on {` ${new Date(comment.created).toDateString()}`}\n                  <span>\n                    {getJwt().user &&\n                      getJwt().user._id == comment.postedBy._id && (\n                        <span\n                          style={{ cursor: \"pointer\" }}\n                          className=\"text-danger float-right mr-1\"\n                          onClick={() => this.confirmDeletion(comment)}\n                        >\n                          Delete\n                        </span>\n                      )}\n                  </span>\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","/Users/bennyjoo/Documents/react/sns-frontend/src/user/ForgotPassword.js",["133","134"],"/Users/bennyjoo/Documents/react/sns-frontend/src/user/ResetPassword.js",["135"],"import React, { Component } from \"react\";\nimport { resetPassword } from \"../auth\";\n\nclass ResetPassword extends Component {\n  state = {\n    newPassword: \"\",\n    error: \"\",\n    message: \"\",\n  };\n\n  isValid = () => {\n    const { newPassword } = this.state;\n    if (newPassword.length == 0) {\n      this.setState({ error: \"Type your new password.\" });\n      return false;\n    }\n    if (newPassword.length < 6) {\n      this.setState({ error: \"Password must contain at least 6 characters.\" });\n      return false;\n    }\n    if (!/\\d/.test(newPassword)) {\n      this.setState({ error: \"Password must contain one or more numbers.\" });\n      return false;\n    }\n    return true;\n  };\n\n  resetPassword = (event) => {\n    event.preventDefault();\n    this.setState({ message: \"\", error: \"\" });\n    const { newPassword } = this.state;\n    const resetPasswordLink = this.props.match.params.resetPasswordToken;\n    if (this.isValid()) {\n      resetPassword(newPassword, resetPasswordLink).then((data) => {\n        if (data.error) {\n          this.setState({ error: data.error });\n        } else {\n          this.setState({ message: data.message, newPassword: \"\" });\n        }\n      });\n    }\n  };\n\n  render() {\n    const { message, error } = this.state;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-5 mb-5\">Reset Password</h2>\n        <hr />\n        <br />\n        {message && <div className=\"alert alert-info\">{message}</div>}\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n        <form onSubmit={this.resetPassword}>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Your new password\"\n              value={this.state.newPassword}\n              name=\"newPassword\"\n              onChange={(e) =>\n                this.setState({\n                  newPassword: e.target.value,\n                  message: \"\",\n                  error: \"\",\n                })\n              }\n              autoFocus\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-raised btn-primary\">\n            Reset Password\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n",{"ruleId":"136","severity":1,"message":"137","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"140","line":2,"column":17,"nodeType":"138","messageId":"139","endLine":2,"endColumn":26},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":119,"column":17,"nodeType":"149","endLine":125,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":38,"column":17,"nodeType":"149","endLine":44,"endColumn":19},{"ruleId":"136","severity":1,"message":"150","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":42},{"ruleId":"151","severity":1,"message":"152","line":96,"column":13,"nodeType":"153","messageId":"154","endLine":96,"endColumn":14,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"150","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":45,"column":17,"nodeType":"149","endLine":51,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":124,"column":15,"nodeType":"149","endLine":129,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":156,"column":46,"nodeType":"158","messageId":"159","endLine":156,"endColumn":48},{"ruleId":"156","severity":1,"message":"157","line":14,"column":21,"nodeType":"158","messageId":"159","endLine":14,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":134,"column":41,"nodeType":"158","messageId":"159","endLine":134,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":13,"column":22,"nodeType":"158","messageId":"159","endLine":13,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":17,"column":13,"nodeType":"153","messageId":"154","endLine":17,"endColumn":14,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"157","line":13,"column":28,"nodeType":"158","messageId":"159","endLine":13,"endColumn":30},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'isValidElement' is defined but never used.","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["163","164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["165","166"],"no-global-assign","no-unsafe-negation",{"messageId":"167","fix":"168","desc":"169"},{"messageId":"170","fix":"171","desc":"172"},{"messageId":"167","fix":"173","desc":"169"},{"messageId":"170","fix":"174","desc":"172"},"removeEscape",{"range":"175","text":"176"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"177","text":"178"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"179","text":"176"},{"range":"180","text":"178"},[2364,2365],"",[2364,2364],"\\",[379,380],[379,379]]